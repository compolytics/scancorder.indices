% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scancorder_multi_calibration.R
\docType{class}
\name{CalibrationReflectanceMultipoint}
\alias{CalibrationReflectanceMultipoint}
\title{CalibrationReflectanceMultipoint R6 Class}
\description{
Performs multi-point reflectance calibration based on a 3D array of calibration factors,
typically loaded from JSON data.
}
\section{Methods}{

\describe{
\item{\code{initialize(calibration_factors = NULL)}}{
Initialize the object with optional calibration factors (3D array).
}
\item{\code{multi_point_calibration(sensor_values)}}{
Apply the calibration formula using quadratic coefficients.
}
\item{\code{slice_keep_first(x, k)}}{
Helper function to extract the k-th slice from a 3D array while preserving dimensions.
}
\item{\code{nested_key_exists(dictionary, keys)}}{
Check whether a nested sequence of keys exists in a list.
}
\item{\code{convert_json_to_matrix(json_data, type = as.numeric)}}{
Convert a nested JSON list to a numeric matrix.
}
\item{\code{convert_json_to_3d_array(json_data, type = as.numeric)}}{
Convert nested JSON structures to a 3D numeric array.
}
\item{\code{ensure_list(x)}}{
Ensure the input is an unnamed list (wraps if necessary).
}
\item{\code{flatten_sample_json(input_json)}}{
Flatten JSON input by extracting "data" fields if present.
}
\item{\code{score(reflectance, json_input)}}{
Perform full calibration pipeline:
flatten JSON input, extract calibration, apply multi-point transformation,
and return the calibrated reflectance as a list.
}
}
}

\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CalibrationReflectanceMultipoint-new}{\code{CalibrationReflectanceMultipoint$new()}}
\item \href{#method-CalibrationReflectanceMultipoint-slice_keep_first}{\code{CalibrationReflectanceMultipoint$slice_keep_first()}}
\item \href{#method-CalibrationReflectanceMultipoint-multi_point_calibration}{\code{CalibrationReflectanceMultipoint$multi_point_calibration()}}
\item \href{#method-CalibrationReflectanceMultipoint-nested_key_exists}{\code{CalibrationReflectanceMultipoint$nested_key_exists()}}
\item \href{#method-CalibrationReflectanceMultipoint-convert_json_to_matrix}{\code{CalibrationReflectanceMultipoint$convert_json_to_matrix()}}
\item \href{#method-CalibrationReflectanceMultipoint-convert_json_to_3d_array}{\code{CalibrationReflectanceMultipoint$convert_json_to_3d_array()}}
\item \href{#method-CalibrationReflectanceMultipoint-ensure_list}{\code{CalibrationReflectanceMultipoint$ensure_list()}}
\item \href{#method-CalibrationReflectanceMultipoint-flatten_sample_json}{\code{CalibrationReflectanceMultipoint$flatten_sample_json()}}
\item \href{#method-CalibrationReflectanceMultipoint-score}{\code{CalibrationReflectanceMultipoint$score()}}
\item \href{#method-CalibrationReflectanceMultipoint-clone}{\code{CalibrationReflectanceMultipoint$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-new"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$new(calibration_factors = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-slice_keep_first"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-slice_keep_first}{}}}
\subsection{Method \code{slice_keep_first()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$slice_keep_first(x, k)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-multi_point_calibration"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-multi_point_calibration}{}}}
\subsection{Method \code{multi_point_calibration()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$multi_point_calibration(sensor_values)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-nested_key_exists"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-nested_key_exists}{}}}
\subsection{Method \code{nested_key_exists()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$nested_key_exists(dictionary, keys)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-convert_json_to_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-convert_json_to_matrix}{}}}
\subsection{Method \code{convert_json_to_matrix()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$convert_json_to_matrix(
  json_data,
  type = as.numeric
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-convert_json_to_3d_array"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-convert_json_to_3d_array}{}}}
\subsection{Method \code{convert_json_to_3d_array()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$convert_json_to_3d_array(
  json_data,
  type = as.numeric
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-ensure_list"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-ensure_list}{}}}
\subsection{Method \code{ensure_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$ensure_list(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-flatten_sample_json"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-flatten_sample_json}{}}}
\subsection{Method \code{flatten_sample_json()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$flatten_sample_json(input_json)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-score"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-score}{}}}
\subsection{Method \code{score()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$score(reflectance, json_input)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CalibrationReflectanceMultipoint-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CalibrationReflectanceMultipoint-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CalibrationReflectanceMultipoint$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
